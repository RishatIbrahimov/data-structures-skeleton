#pragma once

/*
Реализация структуры данных Очередь с поддержкой минимума.

Для возможности эффективного получения минимума на всей очереди предлагается реализовать очередь с помощью двух стэков.
Подробности здесь: http://e-maxx.ru/algo/stacks_for_minima

Интерфейс очереди не меняется - как и прежде, в методы передается только одно число. 

*/

#include "minstack.h"

struct minqueue {
	/* опишите поля очереди - используйте два minstack'а */
	minstack in_stack;
	minstack out_stack;

	minqueue() {
		// конструктор, в котором, возможно, нужно произвести какую-то инициализацию
	}

	// добавить новый элемент в очередь
	void enqueue(int value) {
		
	}

	// удалить первый элемент из очереди, вернуть удаляемое значение
	int dequeue() {
		return 0;
	}

	// вернуть первый элемент из очереди (не удаляя его)
	int first() {
		return 0;
	}

	// размер очереди
	int size() {
		return 0;
	}

	// получить минимальное значение из очереди (не удаляя его)
	int min() {
		return 0;
	}

	~minqueue() {
		// деструктор, подчистить память, если это необходимо
	}
};