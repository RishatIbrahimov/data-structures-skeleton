/*
Реализация структуры данных Вектор.

Вектор - динамически расширяемый массив. Внутри вектора данные хранятся в виде простого массива,
при добавлении нового элемента внутренний массив может переполниться. В этом случае необходимо 
создать новый массив длиной в два раза больше старого, скопировать в него все старые данные и добавить новый элемент.

С точки зрения предоставляемых методов Вектор ничем не отличается от Двусвязного списка.
*/


struct vector {
	/* добавьте необходимы поля: размер вектора, текущая вместимость, внутренний массив */

	vector() {
		// создать все необходимы поля, задать какую-то стандартную начальную вместимость
	}

	vector(int capacity) {
		// создать вектор с начальной вместимостью capacity, создать все необходимые поля
	}

	void add(int value) {
		// добавить value в конец вектора
	}

	int get(int index) {
		//получить значение по индексу
		return 0;
	}

	void remove(int index) {
		//удалить из вектора элемент с заданным индексом
	}

	int size() {
		// получить размер списка
		return 0;
	}

	~vector() {
		// деструктор - подчистить за собой память
	}
};